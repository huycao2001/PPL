// Generated from c:\Users\Dell\Desktop\PPL_ass1\src\main\d96\parser\D96.g4 by ANTLR 4.8

from lexererr import *

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class D96Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		BREAK=1, CONTINUE=2, IF=3, ELSEIF=4, ELSE=5, FOREACH=6, ARRAY=7, IN=8, 
		BY=9, INT_TYPE=10, FLOAT_TYPE=11, BOOLEAN_TYPE=12, STRING_TYPE=13, NULL=14, 
		RETURN=15, ATTRIBUTE_TYPE=16, SELF=17, NEW=18, CLASS=19, IMMUTABLE=20, 
		MUTABLE=21, CONSTRUCTOR=22, DESTRUCTOR=23, DOLLAR_ID=24, ASSIGN=25, ADD=26, 
		SUB=27, MUL=28, DIV=29, MOD=30, NOT=31, AND=32, OR=33, STRCOMPARE=34, 
		CONCATE=35, EQUAL=36, NOTEQUAL=37, LARGER=38, SMALLER=39, LE=40, SE=41, 
		INT_LITERAL=42, BOOL_LITERAL=43, FLOAT_LITERAL=44, STRING_LITERAL=45, 
		BLOCK_COMMENT=46, LB=47, RB=48, LP=49, RP=50, LS=51, RS=52, COLON=53, 
		DOUBLEDOT=54, DOT=55, COMMA=56, SEMI_COLON=57, ID=58, WS=59, ERROR_CHAR=60, 
		UNCLOSE_STRING=61, ILLEGAL_ESCAPE=62;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"BREAK", "CONTINUE", "IF", "ELSEIF", "ELSE", "FOREACH", "ARRAY", "IN", 
			"BY", "INT_TYPE", "FLOAT_TYPE", "BOOLEAN_TYPE", "STRING_TYPE", "NULL", 
			"RETURN", "ATTRIBUTE_TYPE", "SELF", "NEW", "CLASS", "IMMUTABLE", "MUTABLE", 
			"CONSTRUCTOR", "DESTRUCTOR", "DOLLAR_ID", "ASSIGN", "ADD", "SUB", "MUL", 
			"DIV", "MOD", "NOT", "AND", "OR", "STRCOMPARE", "CONCATE", "EQUAL", "NOTEQUAL", 
			"LARGER", "SMALLER", "LE", "SE", "BINARY", "OCTAL", "HEXA", "NATURAL", 
			"INT_LITERAL", "BOOL_LITERAL", "FLOAT_LITERAL", "INT_PART", "DECIMAL", 
			"EXPONENT", "STRING_LITERAL", "QUOTE", "STRCHAR", "ESCCHAR", "BLOCK_COMMENT", 
			"LB", "RB", "LP", "RP", "LS", "RS", "COLON", "DOUBLEDOT", "DOT", "COMMA", 
			"SEMI_COLON", "ID", "WS", "ERROR_CHAR", "UNCLOSE_STRING", "ILLEGAL_ESCAPE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'Break'", "'Continue'", "'If'", "'Elseif'", "'Else'", "'Foreach'", 
			"'Array'", "'In'", "'By'", "'Int'", "'Float'", "'Boolean'", "'String'", 
			"'Null'", "'return'", null, "'Self'", "'New'", "'Class'", "'Val'", "'Var'", 
			"'Constructor'", "'Destructor'", null, "'='", "'+'", "'-'", "'*'", "'/'", 
			"'%'", "'!'", "'&&'", "'||'", "'==.'", "'+.'", "'=='", "'!='", "'>'", 
			"'<'", "'>='", "'<='", null, null, null, null, null, "'('", "')'", "'{'", 
			"'}'", "'['", "']'", "':'", "'..'", "'.'", "','", "';'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "BREAK", "CONTINUE", "IF", "ELSEIF", "ELSE", "FOREACH", "ARRAY", 
			"IN", "BY", "INT_TYPE", "FLOAT_TYPE", "BOOLEAN_TYPE", "STRING_TYPE", 
			"NULL", "RETURN", "ATTRIBUTE_TYPE", "SELF", "NEW", "CLASS", "IMMUTABLE", 
			"MUTABLE", "CONSTRUCTOR", "DESTRUCTOR", "DOLLAR_ID", "ASSIGN", "ADD", 
			"SUB", "MUL", "DIV", "MOD", "NOT", "AND", "OR", "STRCOMPARE", "CONCATE", 
			"EQUAL", "NOTEQUAL", "LARGER", "SMALLER", "LE", "SE", "INT_LITERAL", 
			"BOOL_LITERAL", "FLOAT_LITERAL", "STRING_LITERAL", "BLOCK_COMMENT", "LB", 
			"RB", "LP", "RP", "LS", "RS", "COLON", "DOUBLEDOT", "DOT", "COMMA", "SEMI_COLON", 
			"ID", "WS", "ERROR_CHAR", "UNCLOSE_STRING", "ILLEGAL_ESCAPE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public D96Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "D96.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2@\u0239\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3"+
		"\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13"+
		"\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\5\21\u00ed\n\21\3\22\3\22\3\22"+
		"\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36"+
		"\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3"+
		"&\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\6+\u014e\n+\r+\16+\u014f"+
		"\3+\3+\6+\u0154\n+\r+\16+\u0155\7+\u0158\n+\f+\16+\u015b\13+\3,\3,\3,"+
		"\3,\7,\u0161\n,\f,\16,\u0164\13,\3-\3-\3-\6-\u0169\n-\r-\16-\u016a\3-"+
		"\3-\6-\u016f\n-\r-\16-\u0170\7-\u0173\n-\f-\16-\u0176\13-\3.\3.\3.\7."+
		"\u017b\n.\f.\16.\u017e\13.\3.\3.\6.\u0182\n.\r.\16.\u0183\7.\u0186\n."+
		"\f.\16.\u0189\13.\5.\u018b\n.\3/\3/\3/\3/\5/\u0191\n/\3\60\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\60\3\60\5\60\u019c\n\60\3\61\3\61\3\61\5\61\u01a1"+
		"\n\61\3\61\5\61\u01a4\n\61\3\61\3\61\3\61\3\61\3\61\5\61\u01ab\n\61\3"+
		"\61\3\61\5\61\u01af\n\61\3\62\3\62\3\62\6\62\u01b4\n\62\r\62\16\62\u01b5"+
		"\5\62\u01b8\n\62\3\62\3\62\6\62\u01bc\n\62\r\62\16\62\u01bd\7\62\u01c0"+
		"\n\62\f\62\16\62\u01c3\13\62\3\63\3\63\7\63\u01c7\n\63\f\63\16\63\u01ca"+
		"\13\63\3\64\3\64\5\64\u01ce\n\64\3\64\3\64\3\64\6\64\u01d3\n\64\r\64\16"+
		"\64\u01d4\5\64\u01d7\n\64\3\65\3\65\3\65\7\65\u01dc\n\65\f\65\16\65\u01df"+
		"\13\65\3\65\3\65\3\66\3\66\3\67\3\67\38\38\38\38\38\38\38\38\38\38\38"+
		"\38\38\38\38\38\58\u01f7\n8\39\39\39\39\79\u01fd\n9\f9\169\u0200\139\3"+
		"9\39\39\39\39\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3A\3B\3"+
		"B\3C\3C\3D\3D\3E\3E\7E\u0220\nE\fE\16E\u0223\13E\3F\6F\u0226\nF\rF\16"+
		"F\u0227\3F\3F\3G\3G\3H\3H\3H\7H\u0231\nH\fH\16H\u0234\13H\3H\3H\3I\3I"+
		"\3\u01fe\2J\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U\2W\2Y\2[\2],_-a.c\2e\2g\2i/k\2"+
		"m\2o\2q\60s\61u\62w\63y\64{\65}\66\177\67\u00818\u00839\u0085:\u0087;"+
		"\u0089<\u008b=\u008d>\u008f?\u0091@\3\2\20\4\2DDdd\3\2\62\63\3\2\62\62"+
		"\3\2\629\4\2ZZzz\4\2\62;CH\3\2\63;\3\2\62;\4\2GGgg\4\2--//\5\2$$))^^\5"+
		"\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\2\u025a\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2]\3\2\2\2\2_\3\2\2"+
		"\2\2a\3\2\2\2\2i\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2"+
		"y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083"+
		"\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2"+
		"\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\3\u0093\3\2\2\2\5\u0099"+
		"\3\2\2\2\7\u00a2\3\2\2\2\t\u00a5\3\2\2\2\13\u00ac\3\2\2\2\r\u00b1\3\2"+
		"\2\2\17\u00b9\3\2\2\2\21\u00bf\3\2\2\2\23\u00c2\3\2\2\2\25\u00c5\3\2\2"+
		"\2\27\u00c9\3\2\2\2\31\u00cf\3\2\2\2\33\u00d7\3\2\2\2\35\u00de\3\2\2\2"+
		"\37\u00e3\3\2\2\2!\u00ec\3\2\2\2#\u00ee\3\2\2\2%\u00f3\3\2\2\2\'\u00f7"+
		"\3\2\2\2)\u00fd\3\2\2\2+\u0101\3\2\2\2-\u0105\3\2\2\2/\u0111\3\2\2\2\61"+
		"\u011c\3\2\2\2\63\u011f\3\2\2\2\65\u0121\3\2\2\2\67\u0123\3\2\2\29\u0125"+
		"\3\2\2\2;\u0127\3\2\2\2=\u0129\3\2\2\2?\u012b\3\2\2\2A\u012d\3\2\2\2C"+
		"\u0130\3\2\2\2E\u0133\3\2\2\2G\u0137\3\2\2\2I\u013a\3\2\2\2K\u013d\3\2"+
		"\2\2M\u0140\3\2\2\2O\u0142\3\2\2\2Q\u0144\3\2\2\2S\u0147\3\2\2\2U\u014a"+
		"\3\2\2\2W\u015c\3\2\2\2Y\u0165\3\2\2\2[\u018a\3\2\2\2]\u0190\3\2\2\2_"+
		"\u019b\3\2\2\2a\u01ae\3\2\2\2c\u01b7\3\2\2\2e\u01c4\3\2\2\2g\u01cb\3\2"+
		"\2\2i\u01d8\3\2\2\2k\u01e2\3\2\2\2m\u01e4\3\2\2\2o\u01f6\3\2\2\2q\u01f8"+
		"\3\2\2\2s\u0206\3\2\2\2u\u0208\3\2\2\2w\u020a\3\2\2\2y\u020c\3\2\2\2{"+
		"\u020e\3\2\2\2}\u0210\3\2\2\2\177\u0212\3\2\2\2\u0081\u0214\3\2\2\2\u0083"+
		"\u0217\3\2\2\2\u0085\u0219\3\2\2\2\u0087\u021b\3\2\2\2\u0089\u021d\3\2"+
		"\2\2\u008b\u0225\3\2\2\2\u008d\u022b\3\2\2\2\u008f\u022d\3\2\2\2\u0091"+
		"\u0237\3\2\2\2\u0093\u0094\7D\2\2\u0094\u0095\7t\2\2\u0095\u0096\7g\2"+
		"\2\u0096\u0097\7c\2\2\u0097\u0098\7m\2\2\u0098\4\3\2\2\2\u0099\u009a\7"+
		"E\2\2\u009a\u009b\7q\2\2\u009b\u009c\7p\2\2\u009c\u009d\7v\2\2\u009d\u009e"+
		"\7k\2\2\u009e\u009f\7p\2\2\u009f\u00a0\7w\2\2\u00a0\u00a1\7g\2\2\u00a1"+
		"\6\3\2\2\2\u00a2\u00a3\7K\2\2\u00a3\u00a4\7h\2\2\u00a4\b\3\2\2\2\u00a5"+
		"\u00a6\7G\2\2\u00a6\u00a7\7n\2\2\u00a7\u00a8\7u\2\2\u00a8\u00a9\7g\2\2"+
		"\u00a9\u00aa\7k\2\2\u00aa\u00ab\7h\2\2\u00ab\n\3\2\2\2\u00ac\u00ad\7G"+
		"\2\2\u00ad\u00ae\7n\2\2\u00ae\u00af\7u\2\2\u00af\u00b0\7g\2\2\u00b0\f"+
		"\3\2\2\2\u00b1\u00b2\7H\2\2\u00b2\u00b3\7q\2\2\u00b3\u00b4\7t\2\2\u00b4"+
		"\u00b5\7g\2\2\u00b5\u00b6\7c\2\2\u00b6\u00b7\7e\2\2\u00b7\u00b8\7j\2\2"+
		"\u00b8\16\3\2\2\2\u00b9\u00ba\7C\2\2\u00ba\u00bb\7t\2\2\u00bb\u00bc\7"+
		"t\2\2\u00bc\u00bd\7c\2\2\u00bd\u00be\7{\2\2\u00be\20\3\2\2\2\u00bf\u00c0"+
		"\7K\2\2\u00c0\u00c1\7p\2\2\u00c1\22\3\2\2\2\u00c2\u00c3\7D\2\2\u00c3\u00c4"+
		"\7{\2\2\u00c4\24\3\2\2\2\u00c5\u00c6\7K\2\2\u00c6\u00c7\7p\2\2\u00c7\u00c8"+
		"\7v\2\2\u00c8\26\3\2\2\2\u00c9\u00ca\7H\2\2\u00ca\u00cb\7n\2\2\u00cb\u00cc"+
		"\7q\2\2\u00cc\u00cd\7c\2\2\u00cd\u00ce\7v\2\2\u00ce\30\3\2\2\2\u00cf\u00d0"+
		"\7D\2\2\u00d0\u00d1\7q\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3\7n\2\2\u00d3"+
		"\u00d4\7g\2\2\u00d4\u00d5\7c\2\2\u00d5\u00d6\7p\2\2\u00d6\32\3\2\2\2\u00d7"+
		"\u00d8\7U\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7t\2\2\u00da\u00db\7k\2\2"+
		"\u00db\u00dc\7p\2\2\u00dc\u00dd\7i\2\2\u00dd\34\3\2\2\2\u00de\u00df\7"+
		"P\2\2\u00df\u00e0\7w\2\2\u00e0\u00e1\7n\2\2\u00e1\u00e2\7n\2\2\u00e2\36"+
		"\3\2\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5\7g\2\2\u00e5\u00e6\7v\2\2\u00e6"+
		"\u00e7\7w\2\2\u00e7\u00e8\7t\2\2\u00e8\u00e9\7p\2\2\u00e9 \3\2\2\2\u00ea"+
		"\u00ed\5)\25\2\u00eb\u00ed\5+\26\2\u00ec\u00ea\3\2\2\2\u00ec\u00eb\3\2"+
		"\2\2\u00ed\"\3\2\2\2\u00ee\u00ef\7U\2\2\u00ef\u00f0\7g\2\2\u00f0\u00f1"+
		"\7n\2\2\u00f1\u00f2\7h\2\2\u00f2$\3\2\2\2\u00f3\u00f4\7P\2\2\u00f4\u00f5"+
		"\7g\2\2\u00f5\u00f6\7y\2\2\u00f6&\3\2\2\2\u00f7\u00f8\7E\2\2\u00f8\u00f9"+
		"\7n\2\2\u00f9\u00fa\7c\2\2\u00fa\u00fb\7u\2\2\u00fb\u00fc\7u\2\2\u00fc"+
		"(\3\2\2\2\u00fd\u00fe\7X\2\2\u00fe\u00ff\7c\2\2\u00ff\u0100\7n\2\2\u0100"+
		"*\3\2\2\2\u0101\u0102\7X\2\2\u0102\u0103\7c\2\2\u0103\u0104\7t\2\2\u0104"+
		",\3\2\2\2\u0105\u0106\7E\2\2\u0106\u0107\7q\2\2\u0107\u0108\7p\2\2\u0108"+
		"\u0109\7u\2\2\u0109\u010a\7v\2\2\u010a\u010b\7t\2\2\u010b\u010c\7w\2\2"+
		"\u010c\u010d\7e\2\2\u010d\u010e\7v\2\2\u010e\u010f\7q\2\2\u010f\u0110"+
		"\7t\2\2\u0110.\3\2\2\2\u0111\u0112\7F\2\2\u0112\u0113\7g\2\2\u0113\u0114"+
		"\7u\2\2\u0114\u0115\7v\2\2\u0115\u0116\7t\2\2\u0116\u0117\7w\2\2\u0117"+
		"\u0118\7e\2\2\u0118\u0119\7v\2\2\u0119\u011a\7q\2\2\u011a\u011b\7t\2\2"+
		"\u011b\60\3\2\2\2\u011c\u011d\7&\2\2\u011d\u011e\5\u0089E\2\u011e\62\3"+
		"\2\2\2\u011f\u0120\7?\2\2\u0120\64\3\2\2\2\u0121\u0122\7-\2\2\u0122\66"+
		"\3\2\2\2\u0123\u0124\7/\2\2\u01248\3\2\2\2\u0125\u0126\7,\2\2\u0126:\3"+
		"\2\2\2\u0127\u0128\7\61\2\2\u0128<\3\2\2\2\u0129\u012a\7\'\2\2\u012a>"+
		"\3\2\2\2\u012b\u012c\7#\2\2\u012c@\3\2\2\2\u012d\u012e\7(\2\2\u012e\u012f"+
		"\7(\2\2\u012fB\3\2\2\2\u0130\u0131\7~\2\2\u0131\u0132\7~\2\2\u0132D\3"+
		"\2\2\2\u0133\u0134\7?\2\2\u0134\u0135\7?\2\2\u0135\u0136\7\60\2\2\u0136"+
		"F\3\2\2\2\u0137\u0138\7-\2\2\u0138\u0139\7\60\2\2\u0139H\3\2\2\2\u013a"+
		"\u013b\7?\2\2\u013b\u013c\7?\2\2\u013cJ\3\2\2\2\u013d\u013e\7#\2\2\u013e"+
		"\u013f\7?\2\2\u013fL\3\2\2\2\u0140\u0141\7@\2\2\u0141N\3\2\2\2\u0142\u0143"+
		"\7>\2\2\u0143P\3\2\2\2\u0144\u0145\7@\2\2\u0145\u0146\7?\2\2\u0146R\3"+
		"\2\2\2\u0147\u0148\7>\2\2\u0148\u0149\7?\2\2\u0149T\3\2\2\2\u014a\u014b"+
		"\7\62\2\2\u014b\u014d\t\2\2\2\u014c\u014e\t\3\2\2\u014d\u014c\3\2\2\2"+
		"\u014e\u014f\3\2\2\2\u014f\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u0159"+
		"\3\2\2\2\u0151\u0153\7a\2\2\u0152\u0154\t\3\2\2\u0153\u0152\3\2\2\2\u0154"+
		"\u0155\3\2\2\2\u0155\u0153\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0158\3\2"+
		"\2\2\u0157\u0151\3\2\2\2\u0158\u015b\3\2\2\2\u0159\u0157\3\2\2\2\u0159"+
		"\u015a\3\2\2\2\u015aV\3\2\2\2\u015b\u0159\3\2\2\2\u015c\u0162\t\4\2\2"+
		"\u015d\u0161\t\5\2\2\u015e\u015f\7a\2\2\u015f\u0161\t\5\2\2\u0160\u015d"+
		"\3\2\2\2\u0160\u015e\3\2\2\2\u0161\u0164\3\2\2\2\u0162\u0160\3\2\2\2\u0162"+
		"\u0163\3\2\2\2\u0163X\3\2\2\2\u0164\u0162\3\2\2\2\u0165\u0166\7\62\2\2"+
		"\u0166\u0168\t\6\2\2\u0167\u0169\t\7\2\2\u0168\u0167\3\2\2\2\u0169\u016a"+
		"\3\2\2\2\u016a\u0168\3\2\2\2\u016a\u016b\3\2\2\2\u016b\u0174\3\2\2\2\u016c"+
		"\u016e\7a\2\2\u016d\u016f\t\7\2\2\u016e\u016d\3\2\2\2\u016f\u0170\3\2"+
		"\2\2\u0170\u016e\3\2\2\2\u0170\u0171\3\2\2\2\u0171\u0173\3\2\2\2\u0172"+
		"\u016c\3\2\2\2\u0173\u0176\3\2\2\2\u0174\u0172\3\2\2\2\u0174\u0175\3\2"+
		"\2\2\u0175Z\3\2\2\2\u0176\u0174\3\2\2\2\u0177\u018b\7\62\2\2\u0178\u017c"+
		"\t\b\2\2\u0179\u017b\t\t\2\2\u017a\u0179\3\2\2\2\u017b\u017e\3\2\2\2\u017c"+
		"\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u0187\3\2\2\2\u017e\u017c\3\2"+
		"\2\2\u017f\u0181\7a\2\2\u0180\u0182\t\t\2\2\u0181\u0180\3\2\2\2\u0182"+
		"\u0183\3\2\2\2\u0183\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0186\3\2"+
		"\2\2\u0185\u017f\3\2\2\2\u0186\u0189\3\2\2\2\u0187\u0185\3\2\2\2\u0187"+
		"\u0188\3\2\2\2\u0188\u018b\3\2\2\2\u0189\u0187\3\2\2\2\u018a\u0177\3\2"+
		"\2\2\u018a\u0178\3\2\2\2\u018b\\\3\2\2\2\u018c\u0191\5[.\2\u018d\u0191"+
		"\5Y-\2\u018e\u0191\5W,\2\u018f\u0191\5U+\2\u0190\u018c\3\2\2\2\u0190\u018d"+
		"\3\2\2\2\u0190\u018e\3\2\2\2\u0190\u018f\3\2\2\2\u0191^\3\2\2\2\u0192"+
		"\u0193\7V\2\2\u0193\u0194\7t\2\2\u0194\u0195\7w\2\2\u0195\u019c\7g\2\2"+
		"\u0196\u0197\7H\2\2\u0197\u0198\7c\2\2\u0198\u0199\7n\2\2\u0199\u019a"+
		"\7u\2\2\u019a\u019c\7g\2\2\u019b\u0192\3\2\2\2\u019b\u0196\3\2\2\2\u019c"+
		"`\3\2\2\2\u019d\u019e\5c\62\2\u019e\u01a0\5e\63\2\u019f\u01a1\5g\64\2"+
		"\u01a0\u019f\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1\u01af\3\2\2\2\u01a2\u01a4"+
		"\5c\62\2\u01a3\u01a2\3\2\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5"+
		"\u01a6\5e\63\2\u01a6\u01a7\5g\64\2\u01a7\u01af\3\2\2\2\u01a8\u01aa\5c"+
		"\62\2\u01a9\u01ab\5e\63\2\u01aa\u01a9\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab"+
		"\u01ac\3\2\2\2\u01ac\u01ad\5g\64\2\u01ad\u01af\3\2\2\2\u01ae\u019d\3\2"+
		"\2\2\u01ae\u01a3\3\2\2\2\u01ae\u01a8\3\2\2\2\u01afb\3\2\2\2\u01b0\u01b8"+
		"\t\t\2\2\u01b1\u01b3\t\b\2\2\u01b2\u01b4\t\t\2\2\u01b3\u01b2\3\2\2\2\u01b4"+
		"\u01b5\3\2\2\2\u01b5\u01b3\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6\u01b8\3\2"+
		"\2\2\u01b7\u01b0\3\2\2\2\u01b7\u01b1\3\2\2\2\u01b8\u01c1\3\2\2\2\u01b9"+
		"\u01bb\7a\2\2\u01ba\u01bc\t\t\2\2\u01bb\u01ba\3\2\2\2\u01bc\u01bd\3\2"+
		"\2\2\u01bd\u01bb\3\2\2\2\u01bd\u01be\3\2\2\2\u01be\u01c0\3\2\2\2\u01bf"+
		"\u01b9\3\2\2\2\u01c0\u01c3\3\2\2\2\u01c1\u01bf\3\2\2\2\u01c1\u01c2\3\2"+
		"\2\2\u01c2d\3\2\2\2\u01c3\u01c1\3\2\2\2\u01c4\u01c8\7\60\2\2\u01c5\u01c7"+
		"\t\t\2\2\u01c6\u01c5\3\2\2\2\u01c7\u01ca\3\2\2\2\u01c8\u01c6\3\2\2\2\u01c8"+
		"\u01c9\3\2\2\2\u01c9f\3\2\2\2\u01ca\u01c8\3\2\2\2\u01cb\u01cd\t\n\2\2"+
		"\u01cc\u01ce\t\13\2\2\u01cd\u01cc\3\2\2\2\u01cd\u01ce\3\2\2\2\u01ce\u01d6"+
		"\3\2\2\2\u01cf\u01d7\t\t\2\2\u01d0\u01d2\t\b\2\2\u01d1\u01d3\t\t\2\2\u01d2"+
		"\u01d1\3\2\2\2\u01d3\u01d4\3\2\2\2\u01d4\u01d2\3\2\2\2\u01d4\u01d5\3\2"+
		"\2\2\u01d5\u01d7\3\2\2\2\u01d6\u01cf\3\2\2\2\u01d6\u01d0\3\2\2\2\u01d7"+
		"h\3\2\2\2\u01d8\u01dd\5k\66\2\u01d9\u01dc\5o8\2\u01da\u01dc\5m\67\2\u01db"+
		"\u01d9\3\2\2\2\u01db\u01da\3\2\2\2\u01dc\u01df\3\2\2\2\u01dd\u01db\3\2"+
		"\2\2\u01dd\u01de\3\2\2\2\u01de\u01e0\3\2\2\2\u01df\u01dd\3\2\2\2\u01e0"+
		"\u01e1\5k\66\2\u01e1j\3\2\2\2\u01e2\u01e3\7$\2\2\u01e3l\3\2\2\2\u01e4"+
		"\u01e5\n\f\2\2\u01e5n\3\2\2\2\u01e6\u01e7\7^\2\2\u01e7\u01f7\7d\2\2\u01e8"+
		"\u01e9\7^\2\2\u01e9\u01f7\7h\2\2\u01ea\u01eb\7^\2\2\u01eb\u01f7\7t\2\2"+
		"\u01ec\u01ed\7^\2\2\u01ed\u01f7\7p\2\2\u01ee\u01ef\7^\2\2\u01ef\u01f7"+
		"\7v\2\2\u01f0\u01f1\7^\2\2\u01f1\u01f7\7)\2\2\u01f2\u01f3\7^\2\2\u01f3"+
		"\u01f7\7^\2\2\u01f4\u01f5\7)\2\2\u01f5\u01f7\7$\2\2\u01f6\u01e6\3\2\2"+
		"\2\u01f6\u01e8\3\2\2\2\u01f6\u01ea\3\2\2\2\u01f6\u01ec\3\2\2\2\u01f6\u01ee"+
		"\3\2\2\2\u01f6\u01f0\3\2\2\2\u01f6\u01f2\3\2\2\2\u01f6\u01f4\3\2\2\2\u01f7"+
		"p\3\2\2\2\u01f8\u01f9\7%\2\2\u01f9\u01fa\7%\2\2\u01fa\u01fe\3\2\2\2\u01fb"+
		"\u01fd\13\2\2\2\u01fc\u01fb\3\2\2\2\u01fd\u0200\3\2\2\2\u01fe\u01ff\3"+
		"\2\2\2\u01fe\u01fc\3\2\2\2\u01ff\u0201\3\2\2\2\u0200\u01fe\3\2\2\2\u0201"+
		"\u0202\7%\2\2\u0202\u0203\7%\2\2\u0203\u0204\3\2\2\2\u0204\u0205\b9\2"+
		"\2\u0205r\3\2\2\2\u0206\u0207\7*\2\2\u0207t\3\2\2\2\u0208\u0209\7+\2\2"+
		"\u0209v\3\2\2\2\u020a\u020b\7}\2\2\u020bx\3\2\2\2\u020c\u020d\7\177\2"+
		"\2\u020dz\3\2\2\2\u020e\u020f\7]\2\2\u020f|\3\2\2\2\u0210\u0211\7_\2\2"+
		"\u0211~\3\2\2\2\u0212\u0213\7<\2\2\u0213\u0080\3\2\2\2\u0214\u0215\7\60"+
		"\2\2\u0215\u0216\7\60\2\2\u0216\u0082\3\2\2\2\u0217\u0218\7\60\2\2\u0218"+
		"\u0084\3\2\2\2\u0219\u021a\7.\2\2\u021a\u0086\3\2\2\2\u021b\u021c\7=\2"+
		"\2\u021c\u0088\3\2\2\2\u021d\u0221\t\r\2\2\u021e\u0220\t\16\2\2\u021f"+
		"\u021e\3\2\2\2\u0220\u0223\3\2\2\2\u0221\u021f\3\2\2\2\u0221\u0222\3\2"+
		"\2\2\u0222\u008a\3\2\2\2\u0223\u0221\3\2\2\2\u0224\u0226\t\17\2\2\u0225"+
		"\u0224\3\2\2\2\u0226\u0227\3\2\2\2\u0227\u0225\3\2\2\2\u0227\u0228\3\2"+
		"\2\2\u0228\u0229\3\2\2\2\u0229\u022a\bF\2\2\u022a\u008c\3\2\2\2\u022b"+
		"\u022c\13\2\2\2\u022c\u008e\3\2\2\2\u022d\u0232\7$\2\2\u022e\u0231\5o"+
		"8\2\u022f\u0231\5m\67\2\u0230\u022e\3\2\2\2\u0230\u022f\3\2\2\2\u0231"+
		"\u0234\3\2\2\2\u0232\u0230\3\2\2\2\u0232\u0233\3\2\2\2\u0233\u0235\3\2"+
		"\2\2\u0234\u0232\3\2\2\2\u0235\u0236\7\2\2\3\u0236\u0090\3\2\2\2\u0237"+
		"\u0238\13\2\2\2\u0238\u0092\3\2\2\2&\2\u00ec\u014f\u0155\u0159\u0160\u0162"+
		"\u016a\u0170\u0174\u017c\u0183\u0187\u018a\u0190\u019b\u01a0\u01a3\u01aa"+
		"\u01ae\u01b5\u01b7\u01bd\u01c1\u01c8\u01cd\u01d4\u01d6\u01db\u01dd\u01f6"+
		"\u01fe\u0221\u0227\u0230\u0232\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}